@using CellPhone.Areas.Admin.Models
@model EditUserViewModel
@{
    ViewBag.Title = "Chỉnh sửa tài khoản";
}

<div class="mb-3">
    <h4>Chỉnh sửa tài khoản</h4>
    @(Html.ActionLink("Danh sách tài khoản", "Index", new {}, new { @class = "btn btn-outline-dark" }))
    <hr>
</div>

<div>
    @{
        Html.BeginForm("Edit", "", FormMethod.Post, new { @class = "row" });
            <div class="col-sm-12">
                <div class="mb-3 form-floating">
                    @Html.TextBoxFor(cr => cr.UserName, new { @class = "form-control" })
                    @Html.LabelFor(cr => cr.UserName)
                    @Html.ValidationMessageFor(cr => cr.UserName, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3 form-floating">
                    @Html.TextBoxFor(cr => cr.Email, new { @class = "form-control" })
                    @Html.LabelFor(cr => cr.Email)
                    @Html.ValidationMessageFor(cr => cr.Email, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3 form-floating">
                    @Html.TextBoxFor(cr => cr.Password, new { @class = "form-control" })
                    @Html.LabelFor(cr => cr.Password)
                    @Html.ValidationMessageFor(cr => cr.Password, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3 form-floating">
                    @Html.TextBoxFor(cr => cr.PhoneNumber, new { @class = "form-control" })
                    @Html.LabelFor(cr => cr.PhoneNumber)
                    @Html.ValidationMessageFor(cr => cr.PhoneNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="d-flex justify-content-center">
                <button class="btn btn-outline-dark">Chỉnh sửa tài khoản</button>
            </div>
        Html.EndForm();
    }
</div>